name: CD
run-name: Continuous Delivery on ${{ github.event_name }} by ${{ github.triggering_actor }} # Name of the executed workflow

on:
  pull_request:
    branches: main
jobs:
  tests:
    if: |
      (github.event_name == 'pull_request' &&
      !contains(github.event.pull_request.title, '[cd skip]') &&
      !contains(github.event.pull_request.title, '[skip cd]'))
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.17.1

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Install node.js packages
        run: npm ci

      - name: Run backend test
        run: |
          chmod +x mvnw
          npm run ci:backend:test

      - name: Run frontend test
        run: npm run ci:frontend:test

  deploy:
    if: |
      (github.event_name == 'pull_request' &&
      !contains(github.event.pull_request.title, '[cd skip]') &&
      !contains(github.event.pull_request.title, '[skip cd]'))
    runs-on: ubuntu-22.04
    needs: tests
    env:
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
      NG_CLI_ANALYTICS: false
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.17.1

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Install node.js packages
        run: npm ci

      - name: Package application
        run: |
          chmod +x mvnw
          npm run java:jar:prod 

      # TODO: make this part available when the project is ready to be used
      # - name: Deploy to Heroku
      #   run: |
      #     chmod +x mvnw
      #     if [ ! -z "$HEROKU_API_KEY" ]; then
      #         ./mvnw -ntp com.heroku.sdk:heroku-maven-plugin:2.0.5:deploy -DskipTests -Pprod -Dheroku.buildpacks=heroku/jvm -Dheroku.appName=la-guidonette
      #     else
      #         echo No HEROKU_API_KEY, skipping...
      #     fi

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and publish docker image
        run: |
          chmod +x mvnw
          ./mvnw -ntp jib:build -Djib.to.image=${{ secrets.DOCKERHUB_USERNAME }}/la-guidonette -Djib.to.auth.username="${{ secrets.DOCKERHUB_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKERHUB_TOKEN }}" -Pprod